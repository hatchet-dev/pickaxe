import { pickaxe } from "@/pickaxe-client";
import z from "zod";
// TODO: Import your tools here
// Example: import { myTool } from "@/tools/my-tool";

const {{pascalCase name}}AgentInput = z.object({
  message: z.string(),
});

const {{pascalCase name}}AgentOutput = z.object({
  message: z.string(),
});

export const {{camelCase name}}Toolbox = pickaxe.toolbox({
  tools: [
    // TODO: Add your tools here
    // Example: myTool,
  ],
});

export const {{camelCase name}}Agent = pickaxe.agent({
  name: "{{kebabCase name}}-agent",
  executionTimeout: "1m",
  inputSchema: {{pascalCase name}}AgentInput,
  outputSchema: {{pascalCase name}}AgentOutput,
  description: "{{description}}",
  fn: async (input, ctx) => {
    const result = await {{camelCase name}}Toolbox.pickAndRun(ctx, {
      prompt: input.message,
    });

    switch (result.name) {
      // TODO: Handle your tool results here
      // Example:
      // case "myTool":
      //   return {
      //     message: `Result: ${result.output}`,
      //   };
      default:
        return {{camelCase name}}Toolbox.assertExhaustive(result);
    }
  },
});
